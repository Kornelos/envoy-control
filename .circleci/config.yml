# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

executors:
  my-executor:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    working_directory: ~/repo

jobs:
  build:
    executor: my-executor
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-master-

      - run: ./gradlew --scan --build-cache ktlintCheck detekt dependencies classes

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ .Branch }}-{{ checksum "build.gradle" }}

      - persist_to_workspace:
          root: .
          paths:
            - .
  test:
    executor: my-executor
    parallelism: 2
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-master-

      - run:
          name: unit and integration tests
          command: |
            TESTFILES=$(circleci tests glob "./**/*Test.class" | circleci tests split --split-by=timings --timings-type=classname)
            echo ${TESTFILES}
            ./run-tests-in-files.sh $TESTFILES
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  resilience_test:
    executor: my-executor
    parallelism: 2
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-master-
      - run:
          name: reliability tests
          command: |
            TESTFILES=$(circleci tests glob "./**/*reliability*/*Test.class" | circleci tests split --split-by=timings --timings-type=classname)
            echo ${TESTFILES}
            ./gradlew --scan --build-cache -Penvironment=integration :envoy-control-tests:reliabilityTest -DRELIABILITY_FAILURE_DURATION_SECONDS=20 $(./map_tests.sh $TESTFILES)
          no_output_timeout: 20m
      - run:
          name: Save reliability test results
          command: |
            mkdir -p ~/reliability-test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/reliability-test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/reliability-test-results
      - store_artifacts:
          path: ~/reliability-test-results/junit

workflows:
  version: 2
  build:
    jobs:
      - build
      - test:
          requires:
            - build
      - resilience_test:
          requires:
            - build
